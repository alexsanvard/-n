<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJAAAACJCAYAAADDn7HrAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vQAADr0BR/uQrQAAGqBJREFUeF7t3V2odVtZB/B9UzfRB/SBZUqfBAVCQReBF1FEEBEGRZAo3WSl1EWE
        mBddpfDyYt/WlXJuggrK0qwgSrs5BXURFpqIN2UkpKJH7Xj05Or9rb3/r88ZjbnWnOtrzrnP+sNgrTU/
        xxjP//k/zzPm2mvfbK644ghcCXTFUbgS6IqjcCXQFUfhSqArjsKVQFcchXtLoN/9vSc3H/zgR+4+jcez
        z35+86EPfXzz0Y9++m7LFbtwLwmEAD/+E7+/ef3r37H5i798393W8Xjt6/5qc3PzcPOqn/2zuy1fwPvf
        /9+b73jJb14Jdod7SaA//KN/3hLniSf+YfPTP/Pnm9f8/Nu3255++nN3R+wGFfqBH3zr5su/6uH2GgFi
        vuBFb9q85z3/ebeljw9/+KnnDcHuHYE++cnPbI3/O29+cmvIZ5559rFqaEgwBo77oi970+ZrXvjr2/OR
        6kXf+Gubd737A3dHDMPxDx6+e/OLv/TOLXEPCaVrwb0iELK85Dt/a0ueFhThxd/0ps23fftv3G3ZDypG
        hb73+9+y+aEffsvmj//0X+72jAPlu7l5sPnVN75r+/4f/+nf7/bcH9wrAgk3chfK0wNVoCpjVCSQRwlb
        XqeAEjoPYakX5BUS4oRVhEfQoX4vGasiEKMICSa8l4dIeqnMUP6BOAjUU6ghqOaokNcpcC/nCWM9vPKn
        /mSb6HsV4qjdIQn/3FgFgXgm9VAdeZWLCA1tSPi517x9a7QhT5ab3Ny8YXuNsXBsm0yPgbDlvF7Y0w9E
        lqvZj2R/87cf2L6Xe1E7n9eARROI5JtMk11JwbsRoTUqlXDskCffnvdgUggLESjfWKSKa/sdyIcquRxv
        LM5JrkRt14DFKxDVaT1Z+FIdtRWVz45liB4YZ2jfEHr33wchSf8k3y2oj+v19gm9+5YIlobFE4gxqEYm
        nHp8z0vfsi3JGUIeUb2V+jhePpRcSHVGnZBnKD8aAnVwfk2A94Fa6Vsv10JieZqkeW1k6WEVOZDcRt6D
        LDU3EF6EiTbBTc4kQXUuMiHdpeB+Qmybo1EfyqQvCVvynzWvE62CQDyVR7/sR5+423ILRFG276uQlMqX
        rHCyeNmufLe5D1BPSjUlx1oSVkEgoD4mv3o1UggHRyWcT31i87//8aHN5/71vdv2zJN//5xmm/2OOwby
        M6rUy33WjNkINDUXQRzhSlhiDOFL4+1jgARbQrz1ic3Tr/3lzadf+n2bp26+YvOxm5tJ7RMv+e7Np171
        6s0zv/3mzefe9Xe35BoJoSqPNw6BsRrzkjALgUzCIesckmDJs5C1l4CPFANhPvPGB88hi9ePfOkLNh/9
        +m85uDlfy/WQCik/+453jlIqziA3m7KcEDhXjrWUMv+iBJI4GnwNQ3KFseDB+56oI83/vPoXtoZm4GPJ
        MrZVQn3mJ185ikxCsLxoTIVXySb3e/kr3tZdY7o0LkYgHtMOWvI45bHCELbh6VFIiREvRZqh5v5RPMr0
        7Pv+7a6nhyNkC5BOOJ/igOfARQgk3CBPZNfgs3wPFOkQb2IYasNYWs+Yh7SPfdc3d7cf0kLqT/3Ij23V
        cSrke8mZKDDS1PCNVFXRL42zE8hgDTrkkQgKY1lEMzlyojEyHlAcxDmH2nzk5ls3T//BV28+/rJv6O4/
        tFUiqeymIHMEmc+6Cs8Z5yLRWQmUsJW8BUl8zuBNSq1IxPldRLJPUnzOMIVAn/+vL958+s1fu33fO+aY
        9phIjyq5XTmSsda5QRDEAU5oWaOSiFPOEc7ORiCkqWErnyO/rdcg064n3kpmk3/KUJWGKGmUx7Q8+94v
        ec52rXfuoS1EsqwwBPPjK7lZqkCY6pAIVVexkejSq9pnI5DBxENMgIlInlPJw9PE8cGS9pGXJlz1DHFs
        e+pVL9586sHXbT75Ky/ctmfe+ZWP7mlabh5v0xxzytwojUNYZhhaTzKHiJK582ouQ6LePNcc6dw4C4E8
        wa4PCg0qg0SW7EMekzMkvXIFk3yucKUhxWef/PJHd7slzZY8adn2qCHQqVUoLcq6Lf07oOI170EQSoQw
        mn1R+qQNl4LZOSmEofrcCWFCkJY8BjpUfZH2c6lO2xCDyjyHPHdNKEOyc5GnNuOltj2YL3lPQlSIYnvS
        A+/BMeb6EjgpgYSlVAtgjSeluqfjCVNtPtTC2smlyJOGIBLnlkDZ1x5/rkaJVGpDCXbNeyiSEJb3VrcD
        TrwrpzwVTkYgHiFUBYiTp+QGkoqCl9R8qMI+q7jnSJT3NSShNtspCYHOHLqGmpDm8UgvL0rIyvxRdCkD
        cNC6MMuZz12ZnYxA2J9B8YZIaKtKg5XCI4+TTJ4z39nVhCnTIR/yWXKNRKnG2uPP3cyD1iNRFByZgNrE
        Wb1G9TlkDW3nwEkI5PstNe/J4LLoFSBSLd0fY2byJHzVtZ+8ItQ5qq+xjRr3HoW0cytFyNzWSoyzTv2T
        pCk4mkA6WhM2A0mibCCpDpCsLowFiDYnedKGEmXb5iRQWk+JzHOr7uxBoWo6QZW6jnsCHE0gazphuwEh
        EIjF6TQvSJxuIeeZmzxLb5mfXmLNKfMNR3ZIIi2MVYelVucIZUcRSNJWk+NIaiVS4nAPeRDaTti1/f+G
        RBLrHjhx1ogqcThttrPJKb750OIoAlWZ1LmErpq4ib+9pPmS6zz3pXG23jqRkFXzISkFNZI+1NKeLYbW
        3Q7FwQTC8oQonUqIqvHWa6qDCl9rQB4Tcm3TmnnrPT+rc12Jw05Zf0MqanVKHEQgiW9VH4zXaURKB7Ne
        0YVYfm3HtQ6q2lfi1BRCatFdRjkQBxEI0xOuvIb5VCgJdQ1pFRK+azu+IUjWgYI2ZGWVmjolL3LMKR9z
        TCaQeFs74L2BWPEMkSRuvbUHCZ4/bfFHgtd2XPMnTilUKhAlC4m1yEGsEI5zn2qFejKBdCg5DoXJ8xZs
        x25IEleBePmVMD8CdW3HNyTqhaMaspJqsFlsxTZDyypTMZlAkUWI+lQiYXavXOQt/giwNxHXdljz41We
        0LeoytM6eapjC5Ap8Y/BJALpWB5ZYH6IEiJBlcrAsX6tqzcJ13Zc87f2CVkVlCdkidNX+yFPz9GnYhKB
        KlEwmBTqSGJxJVWF83hLbwKu7bgmJej9cASySLYBwUKcWj3XaHIoRhNIiZ7nLjWRti2LUxLnNvcR0nhJ
        b/BLa4whzFLL/L5h77ilNX0NWSoqQfJeOEsCjVg99ZqC0QRSYSVh01lJGSJl3Qdx6oO9wP41GCLJvQnm
        vSZWormGvG1IhWrBE+JUOwlxEYJDMZpAlc1ZayCLJht0sF33oUwqhd6gl9aQPEpawXHWQCIqH1sEquI4
        uLEl1bCN84Ooker5EIwiEOXJGk/tSM2JevFUPrSGyUeeTHQL411DCDaG3sp/JUjUpjq+1+RHh2AUgWrc
        JIuUpkqhfY6pwHADW8O6j8nvhV8w+WupIBE9aUbAVinpEUVIM6Ys9LLTMWtCowhU4yRPFTuTBwFFauUf
        s9eUPA9VJAyylnFQ+14VnLFV4rBjogcCJaRNxV4CVaVpO5B1hvr8JUC6NSTPWlQy46ngtWtRIOPo/QIa
        +6U6jq0SSaCKwVTsJVCNkfV9cgbrQMmPAkRDnjWErzQq05tE41yLI2jI3hYzxhW7STWoqohRn122NhyL
        vQQiiQlPQhUm17hamRwg2lq8No38t3kcRbJvTY5gHD2HTuSQr8Z2SU2M87Wv++vt+6nYSyAXjrTnhmEx
        iJ/towtEW5PXavqb6jLgOJ58945fakP23o+p15Qj0SOvUN9PwV4C9W4SIiFOj7n5IfDeAJfaEKidRE6y
        NiXV/Bhpcp6AKuXhaUSBEqW6rqIwBTsJ5IKRw5TqVe56sVPHDaA3sCU3hG/XUYx5LRVYbUjf5nM1D2Iz
        6ir1yCOQun8KdhJILqOBi7sJgqRUtNyf/YFj1ui1Pelf61h6eVDPbkr3VNgI1YbwMdhJIJ2IrCWBNqlh
        bZhcYdsaVp/blpBbEQJpxrSWylI/69od3KYbtwuGbJqCoR53SB60k0Ay9yTIuVGNmzokw6+wbY0JNGJo
        FbzUszzqa9zmg0rZtuQxGof1oCTNQWzIZlGeWiT18tl92EmgysjcvJb1LcvB/7NYi5dSlnirCVdxVSCO
        73C3TsKDkcnxSyWSsbX9Rppsi23rNs7fkm4fdhIojKzy1+tE4Lh4cm9QczfGlhRTEOOhMBmLf79ke4VQ
        3atoAkUEh1liyDaWtqqqlVZsV9MQtp36SGOQQLfV1i1pTHIkLzc2qdkWOG6pVYsJ1Xd5TQ+7CJSQPQTX
        XRqJKFA71hRCwLYcvi4EI1NK/bEYJJCLZ/WyZvAJW70S3jZG6A1ozobU+755R0laApnchCkhTiExNMG+
        3L6kcKbf7ZgpbqrmFEW1kq5kGotBAlGTlHWVLFEgXumGFW6+NAUykak4huTZOBh/iECuIyxTGce0jgNC
        w5LGrq+ploO67hO1oUhZ/6kKNRaDBMLOEKiWfQlrtTOBm5PO3oDmaIyOGMKx8UiI2z6byKhmSyBj7oUm
        x0WRK6jzUlRIv2OzoNrRq8+EIHNSFWosBgkkscokIQtvFNaS99gW5gZuviQCVfUB/UUkQCohuqrGWAJp
        cqMkpEFVrLmbfrdKqb/Zpq8+a94DAdgX6ltMIpBJXwuBUgmmyqowtl71NIVAPQ9ngKWEsR6Bqk0rgaJA
        ZyWQm6xJgYSShOAK42DkXqhpCcQAQwRyfrsOZk5co3f8pVuPQDWXPbsCjcmBWgItKQdiSH0MxHqqs0sh
        pihQj0BLU6BWIasdvSLU2XKgtVdhIYNJQ/oh1altigK5XutAPi/FgfS7Z59sM7azVmGHrAMx1twSLvdh
        RH1Hdv3ZR5y0sQSyzcJju+zvnmPvde4mmW8JTl0SotiTXavqIFdV7TEYJNC+lei6LbBtTgUyab7MZiIY
        c0g9hto+AiGnYywacrAKY7c/yfvcjRO1alIVJivRwldIE1WagkECwdCzsCzIhUyB4+aaxEi20GpCDvlS
        m0l3ruY6ISFicgzEGUoyh9RqroboIkKFvCfbYjv9VjCBlIUjTMFOAlWCJHSRvtywTSKBtM/lhQigT4eG
        Ev1GPAuO+SU131JEzNYYFUtKntPMRUsGzp91sNi2koZItGF5H3YSiCFywZAlXg5u2HZSx+bMA5Bgyv0d
        jyg8VvgzyWQdYcZMJvI4t3ftuZoxGUvb/9iQzZJ+iDIJxyf/PlCNiZiKvSYsyVmVv2BpUj7UTHLCEsK0
        49gHYZwaL408Ggdqo8NtTvuF77KnnK/HtSnJGOwkUM3QkUZuUCsy27I/8Jl89ga2lBaFavs+BsZv8p2/
        VEfRr9goqHYzbrkc5RFlwP4s20zBTgKR8TAVeYSvyuS6P+DJS/TKNOSRp41NFqO6Jj9f+RDyKFjv+kto
        HLh1DmPIgmEiR13Lq5FlCnYSCCJriJP3kT0ynuqswuQucYL1qfe34xUmlnfyRudIqoU6xFsyaWrTZ8Sv
        qBUYAWBP5CEMYH9y2ynYSyBkSTIW4mBwOoNU2R9I0KYkspdqPHNokpDGr1ikAnP8WghT25CT1GQ5dqy2
        69lxDPYSKMlz3pP+Koc95i4xD+ollkBx8pcWlMbYbOMgSw7FQ62X/9RIwVZJOzIfiNObmzHYS6AkXO37
        dMhEU6QKhFuaAslbQvoK+9JXhAlUKocsRs7dOG7CUtBzeE4SotX3U7GXQDU79z7rB8mHoPf7QLYtiURR
        lwoOUVVm7QQSvnrrPzWKRGkQKvNR30/FXgJBlbe8rwlYXeEMKNWSwhgCtZWJPtqeYxAmk79GAnHYOHtF
        fqFMKEvZLoLkkZRtY6vSFqMIVJPmKoHpbEr8Ch3iEUtJRIWwtkxF+iTMGgVKomm8ayOQ/rf5aM15OAwn
        qjmR8dZoMhWjCFTzHJ6ZeEmN4rG93xhEsKWEMf3oJYqInzCGMPFEE1/D29IbR+3934waHVJp1Vy25keH
        YBSBoBIkOU+NnVWlAmRbkhF6CSbwUPvWTCD9bxWW0kRdav5KfTLOXvoxBaMJRHUQAngt4uhEpFBISwcr
        lpRMJ5y2SSaYfOHMOGBNBEqq0KI+auIknKeGL+hFjikYTSDkSc5TmV0ZXJkd6HRNVOduyNx7lKGfPQI5
        fikOMNTkd20OCpUceR8igTB2yOOLitEEAp2I9yZzr/mRSW/XhMB5SzJC+lKrMn1HoKhsPhsnx3AOQ7XX
        mrsNqaoIEVIZZ/KcSirRoafGUzCJQFUSK1l6TK9w7JJUSDPx+uQBqYnmjT0CxUM5i/HKNWK0JTT96SXB
        7JCK0ntEqaQaSjmmYhKBdKIuGobBOpZSkTz2VIgnL/HrD8igXwwhZA0RKLB9KePQd+G4RbVHdXT2Cqmk
        I23RcwgmEQhqDK2MrozX0TbH8FkYWJL3tg2BMqkhkPCVcQVIhXC9a1yy6W9sUVF/LDROXh2bLY5Z+6mY
        TKD25glZlfWM0FsRJbVLC2W1MQjigAn3mdr0/oRnbgLpVy8EIXdCWrUJm8Wpqwgci8kEAiV9PLV20kJd
        OmlwPYnkHUutanoEsh3p21DmCf5cauq+5rAltbnv/UvLqj7UtB5zLA4ikI7WXCjhS/6QZy2O6SV3Sv6l
        hrIaEhApBOolqnP+9QlC9xTE/Mdp9TerzZw2ZEOkU6kPHEQgqB3R8cip0BUvHoJKbomhLApkncv4EEej
        NlHWYK5EWn+iJruQxzaUM+ppDL3HOcfgYAJhdJVCBEIo29vJ7kEYnDuPaBtlpKb6JYH2zT6e3IYK2+ZY
        E0r/xoIj1ISajVJlngoHEwhIZKRdCJv6TEUYXFJJjDiMtEtF5XwJbZds+tX7rs8+IBFw7l5hcyyOIhAg
        waEP40yGhTyT05u0SzUkpjakfshANaz1rnHOhtzaMerB0cdEhqk4mkBWNHvV1lgYFOPNRSL3VeK2az0B
        JRJuHTtH2EIcBN+XV86Fowl0ClAwkzUHiYSjyDxkDct3axjOfv2ao+JyT/cfqpqE06kh7dS4KIGECN7e
        GzQSXVqJGKj+hx4GkTwr0SWcc6miFuUZIo9wpq/1S31z4GIEEoNNjC9t5SsTLYSz3o9fnqsxUv0Wn3sn
        0Zyr0tJC3H1hi0Pe3DzcVmZzkegiBJJ8Wq1mrH3PYExESul2Yk/dEpaClO0wF4GS0A85WQtrasKcuZ2D
        RGcnEI9mDFJMcscmgxJXExMjn6tZ0MyKbb7aAXMQiNPsWugTYqlTrXr13QNf4xB6az53CZyNQLxBHpFV
        UKrCQEGS1TxH64F3mbBz5yK8HnH0L/0JgbRzk9j1kWfXXJivrOBbDxLukSdPALI+Jac7dFnlEJyNQAaR
        L58Z/M3Ngy2ZNB7D0+RDBrxLel3HaqqJO6chkQhZ8piAMRmVcgoP51Ij90WIXcpsHtMvc5m+hDwBErnW
        2PB3ClwkB0IY3uHVRBmoScgyO+8XsnaBIpjsc6qRa1cCCbnxZsZy/955hzT3Mif7xq0/+lGPU4E5H1lO
        /WhiKs5OIFKLIFkF5U0qhzzNvy2dHz6ufhLyenANT/up0TmIhCAxFAIhuRYlPcUTeOfrP+ehJrsgRDnG
        /FHwGuKojGvp877rnBMXUaDgtux8sFUiMAkMlAeESMTbYrAhUDHnnJpIrhUiMxbjMBKlYCT9T/iY2lxH
        SBSy942vF9Jv5+bB44QfqGOuPUcFBhcjELKYgBq3SbBm8Ixjn0neN8GB/ASRGJjxTWRruCmtR6Bsdx8k
        0r/2vF3NuUluq/F3QRnfC22WQKh1XVw0r88bBaoDFcIoCC8Sx/OVSxNUCSTE7fMu10U+xmJgrz1j7mvO
        C8ErgbJvLEEdR6n0xbiMYQrc2zz0zpPQRxGXgIsSKIgchxz5xhwy2R4CmaTkSmMmDAEpGbVg/JBprOEd
        m29UtgTa15ybnCnrSUnA98HaTas4iOK67UNex1LtJPtzYxYCkWATDMr5VBImXGmfRPrlr3jb4/CGWFO8
        zrWcJ99iXGqHUEgxRKoxBHKe40IY1/WK6CrFQ6si466r9EITpUl/AuO69GLhLsxCoACRargKgWwLsRDI
        tkxkciUE3BfaKlxLDsLTXVuewfCMFHJ5HyMikPvabr993vN+CkdF9eWQUOIc57tH4Nudrq1fUS79rUWF
        c5aiPMGsBGph4hipJpxJrHldcgP7kC/GHvouzz44j6dnbYqhkncwcj67FwLqwxTStnAdjkCp2j4bp74I
        55QvC4sU1GcK5/ylYXEE4umphBjx5lHoSrizDlMfh1AABqYq2q7V3DmBGKD/WTxtYcxyOOSiQgnliGbf
        oU5ybiyKQCaw5gESSZMZZFW2hr2A/DveZCMeb51r0qtKJRRSL2TnECF6wjE4ztizz1iNKeRbKhZFoIqs
        vraybcJtT6iBGCbbhBufhQuG4NXHhJ4poJAhBURFMw4OEaLXsSHTEkPUPiyWQDwxpW1beciRqjIhioQ4
        uM2VHjxORl1H4otgDJftgFiM3IJ6OV6r90ZO19eQ0/UqOZFH/ypq2Y3M8rjaB0Ae+9aGxRKogncyWCCX
        iJGEPeQJ2YCHa4GQh1DCgWOrQnjv+hWOd/0QyPuETZ+FUaRDslbZbu/18HFyjjhKf30GZLQEgHgB8jiu
        EnUtWAWBAIGU34zJIDWPYLCoCMMhi+OpheNSHsPt8bdkUs1VQ8JtyPnCz7zA7TVvScPY7f4KyqLsR2Bh
        2LnpI7IDsiRJpp4tgdeE1RAIeCjDVa9nqHg3MBrjMLaKDulsqyEjeYh9LRCqhscAcalVCEaJ9CXErXBs
        1q0gpI6K6Yt7rzHnabEqArUQQhirhjfEsA3ahDa4XaC7DTMt5Eo1/AUMrgRHGudSEcoRUlQkbFVQwUqq
        +4JVE6jFrac/fEwohvT4oQXDy4USUioYuadAiGUxj3pQk4TQHm7D3HO//21bmzjfB9wrAgFShBhJaNt8
        RUhDrF7S6hwhsDW2cKhKuiXQG7YhbAjun2PvO+4dgVrIUdpQpWITUoZAhfKlN6BkWUFGDgq0i0DPJ9x7
        AvWABL38pyIVmtauz1CWSy1MLh3PSwJdcTpcCXTFUbgS6IqjcCXQFUfhSqArjsBm83/CHVZsCKbZiAAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>